load system io.
--load system math.

-- a simple test function
-- but you can toss any lambda as your f into any of the other function applications
function f with x do x*x end
function g with x do 2*x*x + 1 end

-- NOTE: odd values of d may be funky for mid. Is this concerning? Requires investegation, probably

-- a & b are lower & upper limits, d is change (upper limit / parts), f is function, t is total
function right with (a, b, d, f, t) do
  if a+d == b do d * (t + f(b))
  else do right (a, b-d, d, f, t + f(b))
  end
end


function left with (a, b, d, f, t) do
  if a == b-d do d * (t + f(b-d))
  else do left (a, b-d, d, f, t + f(b-d))
  end
end

-- can't be d / 2, the bounds are wrong: need to adjust depending on d value
function mid with (a, b, d, f, t) do
  if gettype(t) == "none" do mid (a + d/2, b - d/2, d, f, 0)
  elif a == b do d*(t + f(b))
  else do mid (a, b-d, d, f, t + f(b))
  end
end

-- trap[ezoid]
function trap with (a, b, d, f) do
  (right(a, b, d, f, 0) + left(a, b, d, f, 0)) / 2
end

-- simp[son's]
function simp with (a, b, d, f) do
  (d*mid(a, b, d, f, ()) + trap(a, b, d, f)) / ((b-a) / d)
end

-- test code
io @println(simp (0, 6, 3, f)).